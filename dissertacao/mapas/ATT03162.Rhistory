grupos.4 <- cutree(hc, k=4); table(grupos.4)  # 4 grupos
grupos.5 <- cutree(hc, k=5); table(grupos.5)  # 5 grupos
# recuperar as observaÃƒÂ§ÃƒÂµes quando hÃƒÂ¡ 3 grupos, por exemplo
# aqui usei row.names(X) porque o dataframe estÃƒÂ¡ definido assim
# se houvesse uma coluna que fosse o nome do paÃƒ­s, por exemplo, seria
#       X$pais[grupos.4 == 1]
row.names(X)[grupos.3 == 1]
row.names(X)[grupos.3 == 2]
row.names(X)[grupos.3 == 3]
sapply(unique(grupos.3),function(g)row.names(X)[grupos.3 == g])
sapply(unique(grupos.4),function(g)row.names(X)[grupos.4 == g])
sapply(unique(grupos.5),function(g)row.names(X)[grupos.5 == g])
setwd("~/DissertaÃ§Ã£o_Larissa/Arquivo_R")
load("sul_dem.rda")
library(corrplot)     # CorrelaÃ§Ãµes
library(ClustOfVar)   # Agrupamento de VariÃ¡veis
library(Rcpp)         # ACP
library(FactoMineR)   # ACP
library(stringi)
library(ggplot2)      # GrÃ¡ficos
library(ggdendro)     # Dendrogramas
library(NbClust)      # NÃºmero de grupos ideais
library(ggfortify)    # Agrupamentos
library(ecodist)      # Ward - D . Mahalanobis
library(dplyr)        # manipulaÃ§Ã£o de dados
library(cluster)      # pam
library(MVN)          # normalidade multivariada
library(mvShapiroTest)# normalidade multivariada
# padronizar as variÃ¡veis - subtraindo a mÃ©dia e dividindo pelo
# desvio padrÃ£o
sul.p <- scale(sul[,-c(1:4)],center=T,scale=T)
sul.p <- as.data.frame(sul.p)
# sul.p Ã© o data frame com as variÃ¡veis padronizadas
# transformar nomes d
row.names(sul.p) <- sul$nome.mun
# o mesmo para os dados originais (sul)
sul <- as.data.frame(sul)
row.names(sul) <- sul$nome.mun
# resumo estatÃ­stico
summary(sul[,-c(1:4)])
# correlaÃ§Ãµes
graphics.off()
cor(sul[,-c(1:4)])
sul.r <- cor(sul[,-c(1:4)])
round(sul.r,2)
corrplot(sul.r,tl.col = "black",type="lower")
corrplot.mixed(sul.r, tl.col = "black")
View(sul.p)
setwd("~/DissertaÃ§Ã£o_Larissa/Arquivo_R")
load("sul_dem.rda")
library(corrplot)     # CorrelaÃƒÂ§ÃƒÂµes
library(ClustOfVar)   # Agrupamento de VariÃƒÂ¡veis
library(Rcpp)         # ACP
library(FactoMineR)   # ACP
library(stringi)
library(ggplot2)      # GrÃƒÂ¡ficos
library(ggdendro)     # Dendrogramas
library(NbClust)      # NÃƒÂºmero de grupos ideais
library(ggfortify)    # Agrupamentos
library(ecodist)      # Ward - D . Mahalanobis
library(dplyr)        # manipulaÃƒÂ§ÃƒÂ£o de dados
library(cluster)      # pam
library(MVN)          # normalidade multivariada
library(mvShapiroTest)# normalidade multivariada
# tirar
sul <- sul[,-13]
sul.p <- scale(sul[,-c(1:4)],center=T,scale=T)
sul.p <- as.data.frame(sul.p)
# sul.p ÃƒÂ© o data frame com as variÃƒÂ¡veis padronizadas
# transformar nomes dos municÃƒ­pios em row.names
sul <- as.data.frame(sul)
row.names(sul.p) <- sul$nome.mun
# o mesmo para os dados originais (sul)
row.names(sul) <- sul$nome.mun
# resumo estatÃƒ­stico
summary(sul[,-c(1:4)])
# CV
Xb <- apply(sul[,-c(1:4)],2,mean)
S <- apply(sul[,-c(1:4)],2,sd)
CV <- S/Xb*100
CV
# correlaÃƒÂ§ÃƒÂµes
graphics.off()
cor(sul[,-c(1:4)])
sul.r <- cor(sul[,-c(1:4)])
round(sul.r,2)
corrplot(sul.r,tl.col = "black",type="lower")
corrplot.mixed(sul.r, tl.col = "black")
dis <- (distance(sul[,-c(1:4)],method="mahalanobis"))^0.5   #Mahalanobis
dm <- hclust(dis, method = "average")
ggdendrogram(dm)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL)
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
ct <- hclust(dis, method = "centroid")
ggdendrogram(ct)
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL)
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
grupos.2 <- cutree(wr, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL)
ng$Best.nc
# um dos grupos com observaÃƒÂ§ÃƒÂµes demais
# gamma
ng_gamma<- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gap")
ng_gap$Best.nc
grupos.2 <- cutree(wr, k=2); table(grupos.2)
dis <- (distance(sul[,-c(1:4)],method="mahalanobis"))^0.5   #Mahalanobis
# distÃƒÂ¢ncia mÃƒÂ©dia
dm <- hclust(dis, method = "average")
ggdendrogram(dm)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL)
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# um dos grupos com observaÃƒÂ§ÃƒÂµes demais
grupos.2 <- cutree(dm, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
ct <- hclust(dis, method = "centroid")
ggdendrogram(ct)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL)
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero
grupos.2 <- cutree(ct, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
ct <- hclust(dis, method = "centroid")
ggdendrogram(ct)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL)
# avaliar 2 grupos de Ward
grupos.2 <- cutree(ct, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
# avaliar os 3 grupos de Ward
grupos.3 <- cutree(wr, k=3); table(grupos.3)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.3),function(g)row.names(sul[,-c(1:4)])[grupos.3 == g])
# Avaliar medidas estatisticas - variÃƒÂ¡veis originais -
aggregate(sul[,-c(1:4)],list(grupos.3),mean)
aggregate(sul[,-c(1:4)],list(grupos.3),median)
# avaliar 2 grupos de Ward
grupos.2 <- cutree(wr, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
# Avaliar medidas estatisticas - variÃƒÂ¡veis originais -
aggregate(sul[,-c(1:4)],list(grupos.2),mean)
aggregate(sul[,-c(1:4)],list(grupos.2),median)
Xb <- aggregate(sul[,-c(1:4)],list(grupos.2),mean)
S <- aggregate(sul[,-c(1:4)],list(grupos.2),sd)
CV <- S/Xb*100
CV
Xb <- aggregate(sul[,-c(1:4)],list(grupos.3),mean)
S <- aggregate(sul[,-c(1:4)],list(grupos.3),sd)
CV <- S/Xb*100
CV
dis <- dist(sul.p)
vp <- hclust(dis, method = "single")
library(ggdendro)
ggdendrogram(vp)
set.seed(1)
ng <- NbClust(sul.p, method="single")
ng$Best.nc
# Retirar os mÃƒÂ©todos Dindex e Hubert para fazer barplot porque sÃƒÂ£o grÃƒÂ¡ficos
table(ng$Best.nc[1,c(-23,-25)])
barplot(table(ng$Best.nc[1,c(-23,-25)]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# gamma
ng_gamma<- NbClust(sul.p, method="single",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="single", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="single", index = "gap")
ng_gap$Best.nc
grupos.2 <- cutree(vp, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul.p)[grupos.2 == g])
grupos.5 <- cutree(vp, k=7); table(grupos.7)
sapply(unique(grupos.7),function(g)row.names(sul.p)[grupos.7 == g])
grupos.7 <- cutree(vp, k=7); table(grupos.7)
sapply(unique(grupos.7),function(g)row.names(sul.p)[grupos.7 == g])
grupos.7 <- cutree(vp, k=7); table(grupos.7)
vd <- hclust(dis, method = "complete")
ggdendrogram(vd)
set.seed(1)
ng <- NbClust(sul.p, method="complete")
ng$Best.nc
# gamma
ng_gamma<- NbClust(sul.p, method="complete",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="complete", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="complete", index = "gap")
ng_gap$Best.nc
# obter o nÃƒÂºmero de objetos dentro de cada grupo
grupos.2 <- cutree(vp, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul.p)[grupos.2 == g])
grupos.2 <- cutree(vp, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul.p)[grupos.2 == g])
grupos.2 <- cutree(vd, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul.p)[grupos.2 == g])
grupos.2 <- cutree(vd, k=2); table(grupos.2)
dm <- hclust(dis, method = "average")
library(ggdendro)
ggdendrogram(dm)
set.seed(1)
ng <- NbClust(sul.p, method="average")
ng$Best.nc
ng_gamma<- NbClust(sul.p, method="average",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="average", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="average", index = "gap")
ng_gap$Best.nc
grupos.2 <- cutree(dm, k=2); table(grupos.2)
ct <- hclust(dis, method = "centroid")
ggdendrogram(ct)
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
set.seed(1)
ng <- NbClust(sul.p, method="centroid")
ng$Best.nc
# gamma
ng_gamma<- NbClust(sul.p, method="centroid",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="centroid", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="centroid", index = "gap")
ng_gap$Best.nc
grupos.2 <- cutree(ct, k=2); table(grupos.2)
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
set.seed(1)
ng <- NbClust(sul.p, method="ward.D2")
ng$Best.nc
# gamma
ng_gamma<- NbClust(sul.p, method="ward.D2",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="ward.D2", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="ward.D2", index = "gap")
ng_gap$Best.nc
grupos.2 <- cutree(wr, k=2); table(grupos.2)
sapply(unique(grupos.2),function(g)row.names(sul.p)[grupos.2 == g])
grupos.2 <- cutree(wr, k=2); table(grupos.2)
install.packages(xtable)
install.packages("xtable")
library("xtable", lib.loc="~/R/R-3.3.1/library")
tabela_desejada < - read.csv('~/Documents/table.csv', h=T)
setwd("~/")
load("table.csv")
xtable(a)
xtable(a)
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
# escolha do nÃƒÂºmero de grupos
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
set.seed(1)
ng <- NbClust(sul.p, method="ward.D2")
ng$Best.nc
# Retirar os mÃƒÂ©todos Dindex e Hubert para fazer barplot porque sÃƒÂ£o grÃƒÂ¡ficos
table(ng$Best.nc[1,c(-23,-25)])
barplot(table(ng$Best.nc[1,c(-23,-25)]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# gamma
ng_gamma<- NbClust(sul.p, method="ward.D2",index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, method="ward.D2", index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, method="ward.D2", index = "gap")
ng_gap$Best.nc
#  critÃƒÂ©rios:  grupos , maioria dos mÃƒÂ©todos 3 grupos
# ch:2; duda:6; cindex:3; gamma:14; beale:14; ccc:15; PtBiserial:6;
# gplus:15; DB:13; gap:2
# obter o nÃƒÂºmero de objetos dentro de cada grupo
grupos.2 <- cutree(wr, k=2); table(grupos.2)
aggregate(sul[,-c(1:4)],list(grupos.2),median)
Xb <- aggregate(sul[,-c(1:4)],list(grupos.2),mean)
S <- aggregate(sul[,-c(1:4)],list(grupos.2),sd)
CV <- S/Xb*100
CV
# matriz de distÃƒÂ¢ncias - Mahalanobis
dis <- (distance(sul[,-c(1:4)],method="mahalanobis"))^0.5   #Mahalanobis
# distÃƒÂ¢ncia mÃƒÂ©dia
dm <- hclust(dis, method = "average")
ggdendrogram(dm)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL)
# avaliar 2 grupos de Ward
grupos.2 <- cutree(dm, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# um dos grupos com observaÃƒÂ§ÃƒÂµes demais
# gamma
ng_gamma<- NbClust(sul.p, min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL, index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL, index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, min.nc=2, max.nc=15, method="average",
diss = dis, distance = NULL, index = "gap")
ng_gap$Best.nc
# 6 critÃƒÂ©rios: 2 grupos
# ch: 4; duda: 2; cindex:2; gamma:4; beale: 2; ccc: 2; PtBiserial: 4;
# gplus: 5; DB: 2; gap: 2
# centroide
ct <- hclust(dis, method = "centroid")
ggdendrogram(ct)
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL)
# avaliar 2 grupos de Ward
grupos.2 <- cutree(ct, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# um dos grupos com observaÃƒÂ§ÃƒÂµes demais
# gamma
ng_gamma<- NbClust(sul.p, min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL, index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL, index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, min.nc=2, max.nc=15, method="centroid",
diss = dis, distance = NULL, index = "gap")
ng_gap$Best.nc
# 6 critÃƒÂ©rios: 2 grupos
# ch:6 ; duda:2 ; cindex:2  ; gamma:4  ; beale:2  ; ccc:2  ; PtBiserial:6  ;
# gplus:4 ; DB:2 ; gap:2
# Ward
wr <- hclust(dis, method = "ward.D2")
ggdendrogram(wr)
# NÃƒÂºmero de grupos pelo critÃƒÂ©rios
set.seed(1)
ng <- NbClust(sul[,-c(1:4)], min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL)
ng$Best.nc
table(ng$Best.n[1,])
graphics.off()
barplot(table(ng$Best.n[1,]),
xlab="NÃƒÂºmero de grupos", ylab="NÃƒÂºmero de critÃƒÂ©rios")
# um dos grupos com observaÃƒÂ§ÃƒÂµes demais
# gamma
ng_gamma<- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gamma")
ng_gamma$Best.nc
# gplus
ng_gplus<- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gplus")
ng_gplus$Best.nc
# gap
ng_gap <- NbClust(sul.p, min.nc=2, max.nc=15, method="ward.D2",
diss = dis, distance = NULL, index = "gap")
ng_gap$Best.nc
# 6 critÃƒÂ©rios: 3 grupos
# ch:5; duda:2 cindex:2 ; gamma:2 ; beale:2 ; ccc:2 ; PtBiserial:3 ;
# gplus:2; DB:2; gap:2
# avaliar 2 grupos de Ward
grupos.2 <- cutree(wr, k=2); table(grupos.2)
# MunicÃƒ­pios dentro de cada grupo
sapply(unique(grupos.2),function(g)row.names(sul[,-c(1:4)])[grupos.2 == g])
# Avaliar medidas estatisticas - variÃƒÂ¡veis originais -
aggregate(sul[,-c(1:4)],list(grupos.2),mean)
aggregate(sul[,-c(1:4)],list(grupos.2),median)
# CV
Xb <- aggregate(sul[,-c(1:4)],list(grupos.2),mean)
S <- aggregate(sul[,-c(1:4)],list(grupos.2),sd)
CV <- S/Xb*100
CV
setwd("~/DissertaÃ§Ã£o_Larissa/Arquivo_R")
library(corrplot)  # Correla??es
library(ClustOfVar)   # Agrupamento de Vari?veis
library(Rcpp)         # ACP
library(FactoMineR)   # ACP
library(stringi)
library(ggplot2)      # Gr?ficos
library(ggdendro)     # Dendrogramas
library(NbClust)      # N?mero de grupos ideais
library(ggfortify)    # Agrupamentos
library(ecodist)      # Ward - D . Mahalanobis
library(rgl)          # Escores em 3 dimens?es
library(maptools)     # Mapas
library(rgdal)        # Mapas
library(dplyr)        # Mapas
library(ggmap)        # Mapas
sul <- subset(atlas, meso == "3110")
load("atlas.rda")
setwd("~/mapa")
load("atlas.rda")
sul <- subset(atlas, meso == "3110")
sul.v <- sul[, c(19:23)]
sul.p <- scale(sul.v,center=T,scale=T)
sul.p <- as.data.frame(sul.p)
row.names(sul.p) <- sul$nome.mun
acp <- PCA(sul.p,graph=T)
scores <- as.data.frame(acp$ind$coord)
scores3 <- scores[,1:3]
dis <- dist(scores3)
wr <- hclust(dis, method = "ward.D2",)
grupos.2 <- cutree(wr, k=2)  #2 grupos
grupos.3 <- cutree(wr, k=3)  #3 grupos
wr
grupos.2
grupos.3 <- cutree(wr, k=3)  #3 grupos
grupos.4 <- cutree(wr, k=4)  #4 grupos
grupos.5 <- cutree(wr, k=5)  #5 grupos
x <- as.data.frame(grupos.2)
y <- as.data.frame(grupos.3)
z <- as.data.frame(grupos.4)
w <- as.data.frame(grupos.5)
x <- data.frame(nome.mun=row.names(x), dois=as.factor(x$grupos.2),
tres=as.factor(y$grupos.3), quatro=as.factor(z$grupos.4), cinco=as.factor(w$grupos.5))
x
library(dplyr)
dd <- filter(atlas, meso==3110)
dd$nome.mun <- as.factor(dd$nome.mun)
x$nome.mun <- as.factor(x$nome.mun)
xx <- inner_join(dd, x, by="nome.mun")
names(xx)
mgm <-readOGR(dsn="C:/Users/Larissa/Documents/mapa",layer="31mu2500gsr")
names(xx)
names(mgm)
mgm <-readOGR(dsn="C:/Users/Larissa/Documents/mapa",layer="31mu2500gsr")
mgm <-readOGR(dsn="C:/Users/Larissa/Documents/mapa",layer="31mu2500gsr")
names(mgm)
mgm1<-subset(mgm, MESORREGIÃƒ.==3110)
plot(mgm1)
ggplot(mgm1, aes(long, lat)) +
geom_polygon(aes(group=group), fill = NA, colour = "black") +
coord_map() + theme_void()
mgm1@data<-rename(mgm1@data, codmun7=GEOCODIG_M)
mgm1$codmun7<-as.factor(mgm1$codmun7)
mga <- inner_join(mgm1@data, xx, by="codmun7")
library(maptools)
mgf<-fortify(mgm1, region="codmun7") # demora um pouco
library(ggplot2)      # Gr?ficos
library(rgdal)        # Mapas
library(rgeos)
install.packages(rgeos)
install.packages("rgeos")
mgf<-fortify(mgm1, region="codmun7") # demora um pouco
library(maptools)
if (!require(gpclib)) install.packages("gpclib", type="source")
install.packages("gpclib")
